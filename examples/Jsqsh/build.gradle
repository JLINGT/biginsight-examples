apply plugin: 'groovy'

Properties props = new Properties()
props.load(new FileInputStream("$projectDir/../../connection.properties"))

def matcher = props.gateway =~ /^(https?:\/\/)([^:^\/]*)(:\d*)?(.*)?.*$/
def hostname = matcher[0][2] 

// Hive listens on the master-2 node
hostname = hostname.replace('mastermanager', 'master-2')

task('DownloadJsqsh', type:Copy) {

    def url = 'https://github.com/scgray/jsqsh/releases/download/jsqsh-2.2/jsqsh-2.2-bin.zip'

    def f = file('jsqsh-2.2-bin.zip')
    if (!f.exists()) {
        new URL(url).withInputStream{ i -> f.withOutputStream{ it << i }}
    }

    from zipTree(f) 
    into projectDir
}

task('CreateConfig') {

    if (!(file("${projectDir}/../../certificate").exists())) {
        throw new GradleException("'certificate' file could not be found in ${projectDir.parentFile.parentFile}")
    }

    // import the BigInsights manager certificate
    ant.exec(executable: 'keytool', dir:'./') {
        arg(line: '-import -trustcacerts -alias biginsights -file ../../certificate -keystore ./truststore.jks -storepass mypassword -noprompt')
    }

    mkdir('config')

    def drivers = """<Drivers>
<Driver name="db2"
           url="jdbc:db2://${hostname}:51000/bigsql"
           class="com.ibm.db2.jcc.DB2Driver"
           target="IBM Data Server (DB2, Informix, Big SQL)"
           analyzer="org.sqsh.analyzers.PLSQLAnalyzer"
           normalizer="org.sqsh.normalizer.UpperCaseNormalizer">
      <Classpath><![CDATA[${projectDir}/../../downloads/]]></Classpath>
      <CurrentSchemaQuery><![CDATA[VALUES (TRIM(CURRENT SCHEMA))]]></CurrentSchemaQuery>
      <Variable name="server"><![CDATA[localhost]]></Variable>
      <Variable name="port"><![CDATA[50000]]></Variable>
      <Variable name="db"><![CDATA[changeme]]></Variable>
      <Property name="retrieveMessagesFromServerOnGetMessage"><![CDATA[true]]></Property>
   </Driver>
</Drivers>"""

    file('config/drivers.xml').text = drivers

    def connections = """<connections>
<connection name="biginsights"
               driver="db2"
               server="${hostname}"
               port="51000"
   >
      <username><![CDATA[${props.username}]]></username>
      <password encrypted="false"><![CDATA[${props.password}]]></password>
      <catalog><![CDATA[bigsql]]></catalog>
      <properties>
          <property name="sslConnection"><![CDATA[True]]></property>
          <property name="sslTrustStoreLocation"><![CDATA[${projectDir}/truststore.jks]]></property>
          <property name="Password"><![CDATA[mypassword]]></property>
      </properties>
   </connection>
</connections>"""

    file('config/connections.xml').text = connections 
}

task('SetupJsqsh') {
    dependsOn DownloadJsqsh, CreateConfig

    doLast {
        println "*****************************************************************"
        println "Jsqsh has been successfully setup.  Execute with:"
        println ""
        println "./jsqsh-2.2/bin/jsqsh biginsights -C config [other jsqsh options]"
        println "*****************************************************************"
    }
}

task('RunJsqsh', type:Exec) {

    dependsOn DownloadJsqsh, CreateConfig

    commandLine "${projectDir}/jsqsh-2.2/bin/jsqsh","-C","${projectDir}/config/"
    standardInput = System.in
}
