apply plugin: 'java'
apply plugin: 'eclipse'

// set the dependencies for running the groovy script
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.apache.hive:hive-jdbc:2.0.0'
    }
}

// set the dependencies for compiling the groovy script
repositories {
    mavenCentral()
}

dependencies {
    compile('org.apache.hive:hive-jdbc:2.0.0') {
        exclude group:'org.apache.logging.log4j', module:'log4j-slf4j-impl'
    }
}

sourceSets {
    main {
        resources {
            srcDir file('.') include 'truststore.jks' 
        }
    }
}

// task to run a Java class
task('Example', type: JavaExec) {

    Properties props = new Properties()
    props.load(new FileInputStream("$projectDir/../../connection.properties"))

    def matcher = props.gateway =~ /^(https?:\/\/)([^:^\/]*)(:\d*)?(.*)?.*$/
    def hostname = matcher[0][2] 

    // Hive listens on the master-2 node
    hostname = hostname.replace('mastermanager', 'master-2')

    if (!(new File("${projectDir}/../../certificate").exists())) {
        throw new GradleException("'certificate' file could not be found in ${projectDir.parentFile.parentFile}")
    }

    delete './truststore.jks'

    // import the BigInsights manager certificate
    ant.exec(executable: 'keytool', dir:'./') {
        arg(line: '-import -trustcacerts -alias biginsights -file ../../certificate -keystore ./truststore.jks -storepass mypassword -noprompt')
    }

    // pass environment variables to the class
    environment 'hostname', hostname
    environment 'username', props.username
    environment 'password', props.password

    // run the class
    main = 'Example'
    classpath = sourceSets.main.runtimeClasspath
}
