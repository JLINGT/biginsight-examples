import org.apache.tools.ant.taskdefs.condition.Os

// set the dependencies for running the groovy script
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.codehaus.groovy:groovy-all:latest.release'
    }
}

plugins {
  id 'groovy'
}

apply from: "osSpecificDownloads.gradle"

// set the dependencies for compiling the groovy script
repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:latest.release'
    compile 'org.codehaus.geb:geb-core:latest.release'
    compile 'org.seleniumhq.selenium:selenium-firefox-driver:2.53.0'
    compile('com.codeborne:phantomjsdriver:1.3.0') {
        transitive = false
    }
}

// tell gradle the groovy script is in the same folder as the build.gradle file
sourceSets {
    main {
        groovy {
            srcDirs = ['.']
        }
    }
}

Properties props = new Properties()
props.load(new FileInputStream("$projectDir/../../connection.properties"))

task('CheckHome', type: JavaExec) {

    environment 'gateway', props.gateway
    environment 'username', props.username
    environment 'password', props.password

    main = 'CheckHome'
    classpath = sourceSets.main.runtimeClasspath
}

task('CheckHomePhantomJS', type: JavaExec) {

    dependsOn unzipPhantomJs

    def phantomJsFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "phantomjs.exe" : "bin/phantomjs"

    environment 'phantomjspath', new File(unzipPhantomJs.outputs.files.singleFile, phantomJsFilename).absolutePath

    environment 'driver', 'phantomjs'
    environment 'gateway', props.gateway
    environment 'username', props.username
    environment 'password', props.password

    main = 'CheckHomePhantomJS'
    classpath = sourceSets.main.runtimeClasspath
}

task('Example') {
    dependsOn CheckHome
}
